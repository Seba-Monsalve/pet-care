generator client {
  provider      = "prisma-client-js"
  output        = "../generated/prisma"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  email     String   @unique
  username  String
  password  String
  isActive  Boolean  @default(true)
  phone     String?
  address   String?
  urlImage  String?
  isVet     Boolean? @default(false)
  Pet       Pet[]
}

model Pet {
  id                 String               @id @default(uuid())
  createdAt          DateTime             @default(now()) @db.Timestamp(6)
  name               String
  ownerId            String
  owner              User                 @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  species            String
  sex                Sex
  color              String?
  weight             Int
  sterilized         Boolean
  isActive           Boolean              @default(true)
  breed              String
  urlImage           String?
  dob                DateTime             @default(now()) @db.Timestamp(6)
  notes              String[]
  microchip          String?
  medicalRecord      MedicalRecord[]
  vaccinationHistory VaccinationHistory[]
}

enum Sex {
  hembra
  macho
}

enum VaccinesRecordType {
  Rabia
  Parvovirus
  Moquillo
  Leptospirosis
  Otro
}

model MedicalRecord {
  id          String            @id @default(uuid())
  createdAt   DateTime          @default(now()) @db.Timestamp(6)
  description String
  date        DateTime          @default(now()) @db.Timestamp(6)
  type        MedicalRecordType
  petId       String
  pet         Pet               @relation(fields: [petId], references: [id], onDelete: Cascade)
}

model VaccinationHistory {
  id        String             @id @default(uuid())
  type      VaccinesRecordType
  createdAt DateTime           @default(now()) @db.Timestamp(6)
  date      DateTime           @default(now()) @db.Timestamp(6)
  nextDate  DateTime           @db.Timestamp(6)
  petId     String
  status    Boolean            @default(false)
  pet       Pet                @relation(fields: [petId], references: [id], onDelete: Cascade)
}

enum MedicalRecordType {
  Consulta
  Cirugia
  Desparacitacion
  Otro
}
